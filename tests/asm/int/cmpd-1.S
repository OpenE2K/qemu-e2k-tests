#include "test_start.S"

#undef OP
#define OP cmpodb
        test_cmp(OP, 0x0000000000000000, 0x0000000000000000, false)
        test_cmp(OP, 0x0000000000000000, 0x0000000000000001, false)
        test_cmp(OP, 0x0000000000000000, 0x000000007fffffff, false)
        test_cmp(OP, 0x0000000000000000, 0x0000000080000000, false)
        test_cmp(OP, 0x0000000000000000, 0x00000000deadbeef, false)
        test_cmp(OP, 0x0000000000000000, 0x00000000ffffffff, false)
        test_cmp(OP, 0x0000000000000000, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x0000000000000000, 0x8000000000000000, true)
        test_cmp(OP, 0x0000000000000000, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x0000000000000000, 0xffffffffffffffff, false)

        test_cmp(OP, 0x0000000000000001, 0x0000000000000000, false)
        test_cmp(OP, 0x0000000000000001, 0x0000000000000001, false)
        test_cmp(OP, 0x0000000000000001, 0x000000007fffffff, false)
        test_cmp(OP, 0x0000000000000001, 0x0000000080000000, false)
        test_cmp(OP, 0x0000000000000001, 0x00000000deadbeef, false)
        test_cmp(OP, 0x0000000000000001, 0x00000000ffffffff, false)
        test_cmp(OP, 0x0000000000000001, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x0000000000000001, 0x8000000000000000, true)
        test_cmp(OP, 0x0000000000000001, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x0000000000000001, 0xffffffffffffffff, false)

        test_cmp(OP, 0x000000007fffffff, 0x0000000000000000, false)
        test_cmp(OP, 0x000000007fffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x000000007fffffff, 0x000000007fffffff, false)
        test_cmp(OP, 0x000000007fffffff, 0x0000000080000000, false)
        test_cmp(OP, 0x000000007fffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0x000000007fffffff, 0x00000000ffffffff, false)
        test_cmp(OP, 0x000000007fffffff, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x000000007fffffff, 0x8000000000000000, true)
        test_cmp(OP, 0x000000007fffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x000000007fffffff, 0xffffffffffffffff, false)

        test_cmp(OP, 0x0000000080000000, 0x0000000000000000, false)
        test_cmp(OP, 0x0000000080000000, 0x0000000000000001, false)
        test_cmp(OP, 0x0000000080000000, 0x000000007fffffff, false)
        test_cmp(OP, 0x0000000080000000, 0x0000000080000000, false)
        test_cmp(OP, 0x0000000080000000, 0x00000000deadbeef, false)
        test_cmp(OP, 0x0000000080000000, 0x00000000ffffffff, false)
        test_cmp(OP, 0x0000000080000000, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x0000000080000000, 0x8000000000000000, true)
        test_cmp(OP, 0x0000000080000000, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x0000000080000000, 0xffffffffffffffff, false)

        test_cmp(OP, 0x00000000deadbeef, 0x0000000000000000, false)
        test_cmp(OP, 0x00000000deadbeef, 0x0000000000000001, false)
        test_cmp(OP, 0x00000000deadbeef, 0x000000007fffffff, false)
        test_cmp(OP, 0x00000000deadbeef, 0x0000000080000000, false)
        test_cmp(OP, 0x00000000deadbeef, 0x00000000deadbeef, false)
        test_cmp(OP, 0x00000000deadbeef, 0x00000000ffffffff, false)
        test_cmp(OP, 0x00000000deadbeef, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x00000000deadbeef, 0x8000000000000000, true)
        test_cmp(OP, 0x00000000deadbeef, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x00000000deadbeef, 0xffffffffffffffff, false)

        test_cmp(OP, 0x00000000ffffffff, 0x0000000000000000, false)
        test_cmp(OP, 0x00000000ffffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x00000000ffffffff, 0x000000007fffffff, false)
        test_cmp(OP, 0x00000000ffffffff, 0x0000000080000000, false)
        test_cmp(OP, 0x00000000ffffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0x00000000ffffffff, 0x00000000ffffffff, false)
        test_cmp(OP, 0x00000000ffffffff, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x00000000ffffffff, 0x8000000000000000, true)
        test_cmp(OP, 0x00000000ffffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x00000000ffffffff, 0xffffffffffffffff, false)

        test_cmp(OP, 0x7fffffffffffffff, 0x0000000000000000, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x000000007fffffff, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x0000000080000000, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x00000000ffffffff, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x8000000000000000, true)
        test_cmp(OP, 0x7fffffffffffffff, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x7fffffffffffffff, 0xffffffffffffffff, true)

        test_cmp(OP, 0x8000000000000000, 0x0000000000000000, false)
        test_cmp(OP, 0x8000000000000000, 0x0000000000000001, true)
        test_cmp(OP, 0x8000000000000000, 0x000000007fffffff, true)
        test_cmp(OP, 0x8000000000000000, 0x0000000080000000, true)
        test_cmp(OP, 0x8000000000000000, 0x00000000deadbeef, true)
        test_cmp(OP, 0x8000000000000000, 0x00000000ffffffff, true)
        test_cmp(OP, 0x8000000000000000, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x8000000000000000, 0x8000000000000000, false)
        test_cmp(OP, 0x8000000000000000, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x8000000000000000, 0xffffffffffffffff, false)

        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000000000000, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000000000001, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x000000007fffffff, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000080000000, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x00000000deadbeef, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x00000000ffffffff, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x7fffffffffffffff, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x8000000000000000, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0xffffffffffffffff, false)

        test_cmp(OP, 0xffffffffffffffff, 0x0000000000000000, false)
        test_cmp(OP, 0xffffffffffffffff, 0x0000000000000001, false)
        test_cmp(OP, 0xffffffffffffffff, 0x000000007fffffff, false)
        test_cmp(OP, 0xffffffffffffffff, 0x0000000080000000, false)
        test_cmp(OP, 0xffffffffffffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0xffffffffffffffff, 0x00000000ffffffff, false)
        test_cmp(OP, 0xffffffffffffffff, 0x7fffffffffffffff, false)
        test_cmp(OP, 0xffffffffffffffff, 0x8000000000000000, false)
        test_cmp(OP, 0xffffffffffffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0xffffffffffffffff, 0xffffffffffffffff, false)

#undef OP
#define OP cmpbdb
        test_cmp(OP, 0x0000000000000000, 0x0000000000000000, false)
        test_cmp(OP, 0x0000000000000000, 0x0000000000000001, true)
        test_cmp(OP, 0x0000000000000000, 0x000000007fffffff, true)
        test_cmp(OP, 0x0000000000000000, 0x0000000080000000, true)
        test_cmp(OP, 0x0000000000000000, 0x00000000deadbeef, true)
        test_cmp(OP, 0x0000000000000000, 0x00000000ffffffff, true)
        test_cmp(OP, 0x0000000000000000, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x0000000000000000, 0x8000000000000000, true)
        test_cmp(OP, 0x0000000000000000, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x0000000000000000, 0xffffffffffffffff, true)

        test_cmp(OP, 0x0000000000000001, 0x0000000000000000, false)
        test_cmp(OP, 0x0000000000000001, 0x0000000000000001, false)
        test_cmp(OP, 0x0000000000000001, 0x000000007fffffff, true)
        test_cmp(OP, 0x0000000000000001, 0x0000000080000000, true)
        test_cmp(OP, 0x0000000000000001, 0x00000000deadbeef, true)
        test_cmp(OP, 0x0000000000000001, 0x00000000ffffffff, true)
        test_cmp(OP, 0x0000000000000001, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x0000000000000001, 0x8000000000000000, true)
        test_cmp(OP, 0x0000000000000001, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x0000000000000001, 0xffffffffffffffff, true)

        test_cmp(OP, 0x000000007fffffff, 0x0000000000000000, false)
        test_cmp(OP, 0x000000007fffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x000000007fffffff, 0x000000007fffffff, false)
        test_cmp(OP, 0x000000007fffffff, 0x0000000080000000, true)
        test_cmp(OP, 0x000000007fffffff, 0x00000000deadbeef, true)
        test_cmp(OP, 0x000000007fffffff, 0x00000000ffffffff, true)
        test_cmp(OP, 0x000000007fffffff, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x000000007fffffff, 0x8000000000000000, true)
        test_cmp(OP, 0x000000007fffffff, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x000000007fffffff, 0xffffffffffffffff, true)

        test_cmp(OP, 0x0000000080000000, 0x0000000000000000, false)
        test_cmp(OP, 0x0000000080000000, 0x0000000000000001, false)
        test_cmp(OP, 0x0000000080000000, 0x000000007fffffff, false)
        test_cmp(OP, 0x0000000080000000, 0x0000000080000000, false)
        test_cmp(OP, 0x0000000080000000, 0x00000000deadbeef, true)
        test_cmp(OP, 0x0000000080000000, 0x00000000ffffffff, true)
        test_cmp(OP, 0x0000000080000000, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x0000000080000000, 0x8000000000000000, true)
        test_cmp(OP, 0x0000000080000000, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x0000000080000000, 0xffffffffffffffff, true)

        test_cmp(OP, 0x00000000deadbeef, 0x0000000000000000, false)
        test_cmp(OP, 0x00000000deadbeef, 0x0000000000000001, false)
        test_cmp(OP, 0x00000000deadbeef, 0x000000007fffffff, false)
        test_cmp(OP, 0x00000000deadbeef, 0x0000000080000000, false)
        test_cmp(OP, 0x00000000deadbeef, 0x00000000deadbeef, false)
        test_cmp(OP, 0x00000000deadbeef, 0x00000000ffffffff, true)
        test_cmp(OP, 0x00000000deadbeef, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x00000000deadbeef, 0x8000000000000000, true)
        test_cmp(OP, 0x00000000deadbeef, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x00000000deadbeef, 0xffffffffffffffff, true)

        test_cmp(OP, 0x00000000ffffffff, 0x0000000000000000, false)
        test_cmp(OP, 0x00000000ffffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x00000000ffffffff, 0x000000007fffffff, false)
        test_cmp(OP, 0x00000000ffffffff, 0x0000000080000000, false)
        test_cmp(OP, 0x00000000ffffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0x00000000ffffffff, 0x00000000ffffffff, false)
        test_cmp(OP, 0x00000000ffffffff, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x00000000ffffffff, 0x8000000000000000, true)
        test_cmp(OP, 0x00000000ffffffff, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x00000000ffffffff, 0xffffffffffffffff, true)

        test_cmp(OP, 0x7fffffffffffffff, 0x0000000000000000, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x000000007fffffff, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x0000000080000000, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x00000000ffffffff, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x8000000000000000, true)
        test_cmp(OP, 0x7fffffffffffffff, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x7fffffffffffffff, 0xffffffffffffffff, true)

        test_cmp(OP, 0x8000000000000000, 0x0000000000000000, false)
        test_cmp(OP, 0x8000000000000000, 0x0000000000000001, false)
        test_cmp(OP, 0x8000000000000000, 0x000000007fffffff, false)
        test_cmp(OP, 0x8000000000000000, 0x0000000080000000, false)
        test_cmp(OP, 0x8000000000000000, 0x00000000deadbeef, false)
        test_cmp(OP, 0x8000000000000000, 0x00000000ffffffff, false)
        test_cmp(OP, 0x8000000000000000, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x8000000000000000, 0x8000000000000000, false)
        test_cmp(OP, 0x8000000000000000, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x8000000000000000, 0xffffffffffffffff, true)

        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000000000000, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000000000001, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x000000007fffffff, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000080000000, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x00000000deadbeef, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x00000000ffffffff, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x7fffffffffffffff, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x8000000000000000, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0xffffffffffffffff, true)

        test_cmp(OP, 0xffffffffffffffff, 0x0000000000000000, false)
        test_cmp(OP, 0xffffffffffffffff, 0x0000000000000001, false)
        test_cmp(OP, 0xffffffffffffffff, 0x000000007fffffff, false)
        test_cmp(OP, 0xffffffffffffffff, 0x0000000080000000, false)
        test_cmp(OP, 0xffffffffffffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0xffffffffffffffff, 0x00000000ffffffff, false)
        test_cmp(OP, 0xffffffffffffffff, 0x7fffffffffffffff, false)
        test_cmp(OP, 0xffffffffffffffff, 0x8000000000000000, false)
        test_cmp(OP, 0xffffffffffffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0xffffffffffffffff, 0xffffffffffffffff, false)

#undef OP
#define OP cmpedb
        test_cmp(OP, 0x0000000000000000, 0x0000000000000000, true)
        test_cmp(OP, 0x0000000000000000, 0x0000000000000001, false)
        test_cmp(OP, 0x0000000000000000, 0x000000007fffffff, false)
        test_cmp(OP, 0x0000000000000000, 0x0000000080000000, false)
        test_cmp(OP, 0x0000000000000000, 0x00000000deadbeef, false)
        test_cmp(OP, 0x0000000000000000, 0x00000000ffffffff, false)
        test_cmp(OP, 0x0000000000000000, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x0000000000000000, 0x8000000000000000, false)
        test_cmp(OP, 0x0000000000000000, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x0000000000000000, 0xffffffffffffffff, false)

        test_cmp(OP, 0x0000000000000001, 0x0000000000000000, false)
        test_cmp(OP, 0x0000000000000001, 0x0000000000000001, true)
        test_cmp(OP, 0x0000000000000001, 0x000000007fffffff, false)
        test_cmp(OP, 0x0000000000000001, 0x0000000080000000, false)
        test_cmp(OP, 0x0000000000000001, 0x00000000deadbeef, false)
        test_cmp(OP, 0x0000000000000001, 0x00000000ffffffff, false)
        test_cmp(OP, 0x0000000000000001, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x0000000000000001, 0x8000000000000000, false)
        test_cmp(OP, 0x0000000000000001, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x0000000000000001, 0xffffffffffffffff, false)

        test_cmp(OP, 0x000000007fffffff, 0x0000000000000000, false)
        test_cmp(OP, 0x000000007fffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x000000007fffffff, 0x000000007fffffff, true)
        test_cmp(OP, 0x000000007fffffff, 0x0000000080000000, false)
        test_cmp(OP, 0x000000007fffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0x000000007fffffff, 0x00000000ffffffff, false)
        test_cmp(OP, 0x000000007fffffff, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x000000007fffffff, 0x8000000000000000, false)
        test_cmp(OP, 0x000000007fffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x000000007fffffff, 0xffffffffffffffff, false)

        test_cmp(OP, 0x0000000080000000, 0x0000000000000000, false)
        test_cmp(OP, 0x0000000080000000, 0x0000000000000001, false)
        test_cmp(OP, 0x0000000080000000, 0x000000007fffffff, false)
        test_cmp(OP, 0x0000000080000000, 0x0000000080000000, true)
        test_cmp(OP, 0x0000000080000000, 0x00000000deadbeef, false)
        test_cmp(OP, 0x0000000080000000, 0x00000000ffffffff, false)
        test_cmp(OP, 0x0000000080000000, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x0000000080000000, 0x8000000000000000, false)
        test_cmp(OP, 0x0000000080000000, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x0000000080000000, 0xffffffffffffffff, false)

        test_cmp(OP, 0x00000000deadbeef, 0x0000000000000000, false)
        test_cmp(OP, 0x00000000deadbeef, 0x0000000000000001, false)
        test_cmp(OP, 0x00000000deadbeef, 0x000000007fffffff, false)
        test_cmp(OP, 0x00000000deadbeef, 0x0000000080000000, false)
        test_cmp(OP, 0x00000000deadbeef, 0x00000000deadbeef, true)
        test_cmp(OP, 0x00000000deadbeef, 0x00000000ffffffff, false)
        test_cmp(OP, 0x00000000deadbeef, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x00000000deadbeef, 0x8000000000000000, false)
        test_cmp(OP, 0x00000000deadbeef, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x00000000deadbeef, 0xffffffffffffffff, false)

        test_cmp(OP, 0x00000000ffffffff, 0x0000000000000000, false)
        test_cmp(OP, 0x00000000ffffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x00000000ffffffff, 0x000000007fffffff, false)
        test_cmp(OP, 0x00000000ffffffff, 0x0000000080000000, false)
        test_cmp(OP, 0x00000000ffffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0x00000000ffffffff, 0x00000000ffffffff, true)
        test_cmp(OP, 0x00000000ffffffff, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x00000000ffffffff, 0x8000000000000000, false)
        test_cmp(OP, 0x00000000ffffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x00000000ffffffff, 0xffffffffffffffff, false)

        test_cmp(OP, 0x7fffffffffffffff, 0x0000000000000000, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x000000007fffffff, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x0000000080000000, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x00000000ffffffff, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x7fffffffffffffff, 0x8000000000000000, false)
        test_cmp(OP, 0x7fffffffffffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x7fffffffffffffff, 0xffffffffffffffff, false)

        test_cmp(OP, 0x8000000000000000, 0x0000000000000000, false)
        test_cmp(OP, 0x8000000000000000, 0x0000000000000001, false)
        test_cmp(OP, 0x8000000000000000, 0x000000007fffffff, false)
        test_cmp(OP, 0x8000000000000000, 0x0000000080000000, false)
        test_cmp(OP, 0x8000000000000000, 0x00000000deadbeef, false)
        test_cmp(OP, 0x8000000000000000, 0x00000000ffffffff, false)
        test_cmp(OP, 0x8000000000000000, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x8000000000000000, 0x8000000000000000, true)
        test_cmp(OP, 0x8000000000000000, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x8000000000000000, 0xffffffffffffffff, false)

        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000000000000, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000000000001, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x000000007fffffff, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000080000000, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x00000000deadbeef, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x00000000ffffffff, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x7fffffffffffffff, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x8000000000000000, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0xffffffffffffffff, false)

        test_cmp(OP, 0xffffffffffffffff, 0x0000000000000000, false)
        test_cmp(OP, 0xffffffffffffffff, 0x0000000000000001, false)
        test_cmp(OP, 0xffffffffffffffff, 0x000000007fffffff, false)
        test_cmp(OP, 0xffffffffffffffff, 0x0000000080000000, false)
        test_cmp(OP, 0xffffffffffffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0xffffffffffffffff, 0x00000000ffffffff, false)
        test_cmp(OP, 0xffffffffffffffff, 0x7fffffffffffffff, false)
        test_cmp(OP, 0xffffffffffffffff, 0x8000000000000000, false)
        test_cmp(OP, 0xffffffffffffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0xffffffffffffffff, 0xffffffffffffffff, true)

#undef OP
#define OP cmpbedb
        test_cmp(OP, 0x0000000000000000, 0x0000000000000000, true)
        test_cmp(OP, 0x0000000000000000, 0x0000000000000001, true)
        test_cmp(OP, 0x0000000000000000, 0x000000007fffffff, true)
        test_cmp(OP, 0x0000000000000000, 0x0000000080000000, true)
        test_cmp(OP, 0x0000000000000000, 0x00000000deadbeef, true)
        test_cmp(OP, 0x0000000000000000, 0x00000000ffffffff, true)
        test_cmp(OP, 0x0000000000000000, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x0000000000000000, 0x8000000000000000, true)
        test_cmp(OP, 0x0000000000000000, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x0000000000000000, 0xffffffffffffffff, true)

        test_cmp(OP, 0x0000000000000001, 0x0000000000000000, false)
        test_cmp(OP, 0x0000000000000001, 0x0000000000000001, true)
        test_cmp(OP, 0x0000000000000001, 0x000000007fffffff, true)
        test_cmp(OP, 0x0000000000000001, 0x0000000080000000, true)
        test_cmp(OP, 0x0000000000000001, 0x00000000deadbeef, true)
        test_cmp(OP, 0x0000000000000001, 0x00000000ffffffff, true)
        test_cmp(OP, 0x0000000000000001, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x0000000000000001, 0x8000000000000000, true)
        test_cmp(OP, 0x0000000000000001, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x0000000000000001, 0xffffffffffffffff, true)

        test_cmp(OP, 0x000000007fffffff, 0x0000000000000000, false)
        test_cmp(OP, 0x000000007fffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x000000007fffffff, 0x000000007fffffff, true)
        test_cmp(OP, 0x000000007fffffff, 0x0000000080000000, true)
        test_cmp(OP, 0x000000007fffffff, 0x00000000deadbeef, true)
        test_cmp(OP, 0x000000007fffffff, 0x00000000ffffffff, true)
        test_cmp(OP, 0x000000007fffffff, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x000000007fffffff, 0x8000000000000000, true)
        test_cmp(OP, 0x000000007fffffff, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x000000007fffffff, 0xffffffffffffffff, true)

        test_cmp(OP, 0x0000000080000000, 0x0000000000000000, false)
        test_cmp(OP, 0x0000000080000000, 0x0000000000000001, false)
        test_cmp(OP, 0x0000000080000000, 0x000000007fffffff, false)
        test_cmp(OP, 0x0000000080000000, 0x0000000080000000, true)
        test_cmp(OP, 0x0000000080000000, 0x00000000deadbeef, true)
        test_cmp(OP, 0x0000000080000000, 0x00000000ffffffff, true)
        test_cmp(OP, 0x0000000080000000, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x0000000080000000, 0x8000000000000000, true)
        test_cmp(OP, 0x0000000080000000, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x0000000080000000, 0xffffffffffffffff, true)

        test_cmp(OP, 0x00000000deadbeef, 0x0000000000000000, false)
        test_cmp(OP, 0x00000000deadbeef, 0x0000000000000001, false)
        test_cmp(OP, 0x00000000deadbeef, 0x000000007fffffff, false)
        test_cmp(OP, 0x00000000deadbeef, 0x0000000080000000, false)
        test_cmp(OP, 0x00000000deadbeef, 0x00000000deadbeef, true)
        test_cmp(OP, 0x00000000deadbeef, 0x00000000ffffffff, true)
        test_cmp(OP, 0x00000000deadbeef, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x00000000deadbeef, 0x8000000000000000, true)
        test_cmp(OP, 0x00000000deadbeef, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x00000000deadbeef, 0xffffffffffffffff, true)

        test_cmp(OP, 0x00000000ffffffff, 0x0000000000000000, false)
        test_cmp(OP, 0x00000000ffffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x00000000ffffffff, 0x000000007fffffff, false)
        test_cmp(OP, 0x00000000ffffffff, 0x0000000080000000, false)
        test_cmp(OP, 0x00000000ffffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0x00000000ffffffff, 0x00000000ffffffff, true)
        test_cmp(OP, 0x00000000ffffffff, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x00000000ffffffff, 0x8000000000000000, true)
        test_cmp(OP, 0x00000000ffffffff, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x00000000ffffffff, 0xffffffffffffffff, true)

        test_cmp(OP, 0x7fffffffffffffff, 0x0000000000000000, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x000000007fffffff, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x0000000080000000, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x00000000ffffffff, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x7fffffffffffffff, 0x8000000000000000, true)
        test_cmp(OP, 0x7fffffffffffffff, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x7fffffffffffffff, 0xffffffffffffffff, true)

        test_cmp(OP, 0x8000000000000000, 0x0000000000000000, false)
        test_cmp(OP, 0x8000000000000000, 0x0000000000000001, false)
        test_cmp(OP, 0x8000000000000000, 0x000000007fffffff, false)
        test_cmp(OP, 0x8000000000000000, 0x0000000080000000, false)
        test_cmp(OP, 0x8000000000000000, 0x00000000deadbeef, false)
        test_cmp(OP, 0x8000000000000000, 0x00000000ffffffff, false)
        test_cmp(OP, 0x8000000000000000, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x8000000000000000, 0x8000000000000000, true)
        test_cmp(OP, 0x8000000000000000, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x8000000000000000, 0xffffffffffffffff, true)

        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000000000000, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000000000001, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x000000007fffffff, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000080000000, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x00000000deadbeef, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x00000000ffffffff, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x7fffffffffffffff, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x8000000000000000, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0xffffffffffffffff, true)

        test_cmp(OP, 0xffffffffffffffff, 0x0000000000000000, false)
        test_cmp(OP, 0xffffffffffffffff, 0x0000000000000001, false)
        test_cmp(OP, 0xffffffffffffffff, 0x000000007fffffff, false)
        test_cmp(OP, 0xffffffffffffffff, 0x0000000080000000, false)
        test_cmp(OP, 0xffffffffffffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0xffffffffffffffff, 0x00000000ffffffff, false)
        test_cmp(OP, 0xffffffffffffffff, 0x7fffffffffffffff, false)
        test_cmp(OP, 0xffffffffffffffff, 0x8000000000000000, false)
        test_cmp(OP, 0xffffffffffffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0xffffffffffffffff, 0xffffffffffffffff, true)

#undef OP
#define OP cmpsdb
        test_cmp(OP, 0x0000000000000000, 0x0000000000000000, false)
        test_cmp(OP, 0x0000000000000000, 0x0000000000000001, true)
        test_cmp(OP, 0x0000000000000000, 0x000000007fffffff, true)
        test_cmp(OP, 0x0000000000000000, 0x0000000080000000, true)
        test_cmp(OP, 0x0000000000000000, 0x00000000deadbeef, true)
        test_cmp(OP, 0x0000000000000000, 0x00000000ffffffff, true)
        test_cmp(OP, 0x0000000000000000, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x0000000000000000, 0x8000000000000000, true)
        test_cmp(OP, 0x0000000000000000, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x0000000000000000, 0xffffffffffffffff, false)

        test_cmp(OP, 0x0000000000000001, 0x0000000000000000, false)
        test_cmp(OP, 0x0000000000000001, 0x0000000000000001, false)
        test_cmp(OP, 0x0000000000000001, 0x000000007fffffff, true)
        test_cmp(OP, 0x0000000000000001, 0x0000000080000000, true)
        test_cmp(OP, 0x0000000000000001, 0x00000000deadbeef, true)
        test_cmp(OP, 0x0000000000000001, 0x00000000ffffffff, true)
        test_cmp(OP, 0x0000000000000001, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x0000000000000001, 0x8000000000000000, true)
        test_cmp(OP, 0x0000000000000001, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x0000000000000001, 0xffffffffffffffff, false)

        test_cmp(OP, 0x000000007fffffff, 0x0000000000000000, false)
        test_cmp(OP, 0x000000007fffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x000000007fffffff, 0x000000007fffffff, false)
        test_cmp(OP, 0x000000007fffffff, 0x0000000080000000, true)
        test_cmp(OP, 0x000000007fffffff, 0x00000000deadbeef, true)
        test_cmp(OP, 0x000000007fffffff, 0x00000000ffffffff, true)
        test_cmp(OP, 0x000000007fffffff, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x000000007fffffff, 0x8000000000000000, true)
        test_cmp(OP, 0x000000007fffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x000000007fffffff, 0xffffffffffffffff, false)

        test_cmp(OP, 0x0000000080000000, 0x0000000000000000, false)
        test_cmp(OP, 0x0000000080000000, 0x0000000000000001, false)
        test_cmp(OP, 0x0000000080000000, 0x000000007fffffff, false)
        test_cmp(OP, 0x0000000080000000, 0x0000000080000000, false)
        test_cmp(OP, 0x0000000080000000, 0x00000000deadbeef, true)
        test_cmp(OP, 0x0000000080000000, 0x00000000ffffffff, true)
        test_cmp(OP, 0x0000000080000000, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x0000000080000000, 0x8000000000000000, true)
        test_cmp(OP, 0x0000000080000000, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x0000000080000000, 0xffffffffffffffff, false)

        test_cmp(OP, 0x00000000deadbeef, 0x0000000000000000, false)
        test_cmp(OP, 0x00000000deadbeef, 0x0000000000000001, false)
        test_cmp(OP, 0x00000000deadbeef, 0x000000007fffffff, false)
        test_cmp(OP, 0x00000000deadbeef, 0x0000000080000000, false)
        test_cmp(OP, 0x00000000deadbeef, 0x00000000deadbeef, false)
        test_cmp(OP, 0x00000000deadbeef, 0x00000000ffffffff, true)
        test_cmp(OP, 0x00000000deadbeef, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x00000000deadbeef, 0x8000000000000000, true)
        test_cmp(OP, 0x00000000deadbeef, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x00000000deadbeef, 0xffffffffffffffff, false)

        test_cmp(OP, 0x00000000ffffffff, 0x0000000000000000, false)
        test_cmp(OP, 0x00000000ffffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x00000000ffffffff, 0x000000007fffffff, false)
        test_cmp(OP, 0x00000000ffffffff, 0x0000000080000000, false)
        test_cmp(OP, 0x00000000ffffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0x00000000ffffffff, 0x00000000ffffffff, false)
        test_cmp(OP, 0x00000000ffffffff, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x00000000ffffffff, 0x8000000000000000, true)
        test_cmp(OP, 0x00000000ffffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x00000000ffffffff, 0xffffffffffffffff, false)

        test_cmp(OP, 0x7fffffffffffffff, 0x0000000000000000, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x000000007fffffff, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x0000000080000000, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x00000000ffffffff, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x8000000000000000, true)
        test_cmp(OP, 0x7fffffffffffffff, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x7fffffffffffffff, 0xffffffffffffffff, true)

        test_cmp(OP, 0x8000000000000000, 0x0000000000000000, true)
        test_cmp(OP, 0x8000000000000000, 0x0000000000000001, false)
        test_cmp(OP, 0x8000000000000000, 0x000000007fffffff, false)
        test_cmp(OP, 0x8000000000000000, 0x0000000080000000, false)
        test_cmp(OP, 0x8000000000000000, 0x00000000deadbeef, false)
        test_cmp(OP, 0x8000000000000000, 0x00000000ffffffff, false)
        test_cmp(OP, 0x8000000000000000, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x8000000000000000, 0x8000000000000000, false)
        test_cmp(OP, 0x8000000000000000, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x8000000000000000, 0xffffffffffffffff, true)

        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000000000000, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000000000001, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x000000007fffffff, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000080000000, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x00000000deadbeef, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x00000000ffffffff, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x7fffffffffffffff, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x8000000000000000, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0xffffffffffffffff, true)

        test_cmp(OP, 0xffffffffffffffff, 0x0000000000000000, true)
        test_cmp(OP, 0xffffffffffffffff, 0x0000000000000001, true)
        test_cmp(OP, 0xffffffffffffffff, 0x000000007fffffff, true)
        test_cmp(OP, 0xffffffffffffffff, 0x0000000080000000, true)
        test_cmp(OP, 0xffffffffffffffff, 0x00000000deadbeef, true)
        test_cmp(OP, 0xffffffffffffffff, 0x00000000ffffffff, true)
        test_cmp(OP, 0xffffffffffffffff, 0x7fffffffffffffff, true)
        test_cmp(OP, 0xffffffffffffffff, 0x8000000000000000, false)
        test_cmp(OP, 0xffffffffffffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0xffffffffffffffff, 0xffffffffffffffff, false)

#undef OP
#define OP cmppdb
        test_cmp(OP, 0x0000000000000000, 0x0000000000000000, true)
        test_cmp(OP, 0x0000000000000000, 0x0000000000000001, true)
        test_cmp(OP, 0x0000000000000000, 0x000000007fffffff, false)
        test_cmp(OP, 0x0000000000000000, 0x0000000080000000, true)
        test_cmp(OP, 0x0000000000000000, 0x00000000deadbeef, true)
        test_cmp(OP, 0x0000000000000000, 0x00000000ffffffff, false)
        test_cmp(OP, 0x0000000000000000, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x0000000000000000, 0x8000000000000000, true)
        test_cmp(OP, 0x0000000000000000, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x0000000000000000, 0xffffffffffffffff, false)

        test_cmp(OP, 0x0000000000000001, 0x0000000000000000, false)
        test_cmp(OP, 0x0000000000000001, 0x0000000000000001, true)
        test_cmp(OP, 0x0000000000000001, 0x000000007fffffff, false)
        test_cmp(OP, 0x0000000000000001, 0x0000000080000000, false)
        test_cmp(OP, 0x0000000000000001, 0x00000000deadbeef, true)
        test_cmp(OP, 0x0000000000000001, 0x00000000ffffffff, false)
        test_cmp(OP, 0x0000000000000001, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x0000000000000001, 0x8000000000000000, false)
        test_cmp(OP, 0x0000000000000001, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x0000000000000001, 0xffffffffffffffff, false)

        test_cmp(OP, 0x000000007fffffff, 0x0000000000000000, true)
        test_cmp(OP, 0x000000007fffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x000000007fffffff, 0x000000007fffffff, true)
        test_cmp(OP, 0x000000007fffffff, 0x0000000080000000, true)
        test_cmp(OP, 0x000000007fffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0x000000007fffffff, 0x00000000ffffffff, true)
        test_cmp(OP, 0x000000007fffffff, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x000000007fffffff, 0x8000000000000000, true)
        test_cmp(OP, 0x000000007fffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x000000007fffffff, 0xffffffffffffffff, true)

        test_cmp(OP, 0x0000000080000000, 0x0000000000000000, true)
        test_cmp(OP, 0x0000000080000000, 0x0000000000000001, true)
        test_cmp(OP, 0x0000000080000000, 0x000000007fffffff, false)
        test_cmp(OP, 0x0000000080000000, 0x0000000080000000, true)
        test_cmp(OP, 0x0000000080000000, 0x00000000deadbeef, true)
        test_cmp(OP, 0x0000000080000000, 0x00000000ffffffff, false)
        test_cmp(OP, 0x0000000080000000, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x0000000080000000, 0x8000000000000000, true)
        test_cmp(OP, 0x0000000080000000, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x0000000080000000, 0xffffffffffffffff, false)

        test_cmp(OP, 0x00000000deadbeef, 0x0000000000000000, false)
        test_cmp(OP, 0x00000000deadbeef, 0x0000000000000001, true)
        test_cmp(OP, 0x00000000deadbeef, 0x000000007fffffff, true)
        test_cmp(OP, 0x00000000deadbeef, 0x0000000080000000, false)
        test_cmp(OP, 0x00000000deadbeef, 0x00000000deadbeef, true)
        test_cmp(OP, 0x00000000deadbeef, 0x00000000ffffffff, true)
        test_cmp(OP, 0x00000000deadbeef, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x00000000deadbeef, 0x8000000000000000, false)
        test_cmp(OP, 0x00000000deadbeef, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x00000000deadbeef, 0xffffffffffffffff, true)

        test_cmp(OP, 0x00000000ffffffff, 0x0000000000000000, true)
        test_cmp(OP, 0x00000000ffffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x00000000ffffffff, 0x000000007fffffff, true)
        test_cmp(OP, 0x00000000ffffffff, 0x0000000080000000, true)
        test_cmp(OP, 0x00000000ffffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0x00000000ffffffff, 0x00000000ffffffff, true)
        test_cmp(OP, 0x00000000ffffffff, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x00000000ffffffff, 0x8000000000000000, true)
        test_cmp(OP, 0x00000000ffffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x00000000ffffffff, 0xffffffffffffffff, true)

        test_cmp(OP, 0x7fffffffffffffff, 0x0000000000000000, true)
        test_cmp(OP, 0x7fffffffffffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x000000007fffffff, true)
        test_cmp(OP, 0x7fffffffffffffff, 0x0000000080000000, true)
        test_cmp(OP, 0x7fffffffffffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x00000000ffffffff, true)
        test_cmp(OP, 0x7fffffffffffffff, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x7fffffffffffffff, 0x8000000000000000, true)
        test_cmp(OP, 0x7fffffffffffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x7fffffffffffffff, 0xffffffffffffffff, true)

        test_cmp(OP, 0x8000000000000000, 0x0000000000000000, true)
        test_cmp(OP, 0x8000000000000000, 0x0000000000000001, true)
        test_cmp(OP, 0x8000000000000000, 0x000000007fffffff, false)
        test_cmp(OP, 0x8000000000000000, 0x0000000080000000, true)
        test_cmp(OP, 0x8000000000000000, 0x00000000deadbeef, true)
        test_cmp(OP, 0x8000000000000000, 0x00000000ffffffff, false)
        test_cmp(OP, 0x8000000000000000, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x8000000000000000, 0x8000000000000000, true)
        test_cmp(OP, 0x8000000000000000, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x8000000000000000, 0xffffffffffffffff, false)

        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000000000000, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000000000001, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x000000007fffffff, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000080000000, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x00000000deadbeef, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x00000000ffffffff, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x7fffffffffffffff, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x8000000000000000, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0xffffffffffffffff, true)

        test_cmp(OP, 0xffffffffffffffff, 0x0000000000000000, true)
        test_cmp(OP, 0xffffffffffffffff, 0x0000000000000001, false)
        test_cmp(OP, 0xffffffffffffffff, 0x000000007fffffff, true)
        test_cmp(OP, 0xffffffffffffffff, 0x0000000080000000, true)
        test_cmp(OP, 0xffffffffffffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0xffffffffffffffff, 0x00000000ffffffff, true)
        test_cmp(OP, 0xffffffffffffffff, 0x7fffffffffffffff, true)
        test_cmp(OP, 0xffffffffffffffff, 0x8000000000000000, true)
        test_cmp(OP, 0xffffffffffffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0xffffffffffffffff, 0xffffffffffffffff, true)

#undef OP
#define OP cmpldb
        test_cmp(OP, 0x0000000000000000, 0x0000000000000000, false)
        test_cmp(OP, 0x0000000000000000, 0x0000000000000001, true)
        test_cmp(OP, 0x0000000000000000, 0x000000007fffffff, true)
        test_cmp(OP, 0x0000000000000000, 0x0000000080000000, true)
        test_cmp(OP, 0x0000000000000000, 0x00000000deadbeef, true)
        test_cmp(OP, 0x0000000000000000, 0x00000000ffffffff, true)
        test_cmp(OP, 0x0000000000000000, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x0000000000000000, 0x8000000000000000, false)
        test_cmp(OP, 0x0000000000000000, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x0000000000000000, 0xffffffffffffffff, false)

        test_cmp(OP, 0x0000000000000001, 0x0000000000000000, false)
        test_cmp(OP, 0x0000000000000001, 0x0000000000000001, false)
        test_cmp(OP, 0x0000000000000001, 0x000000007fffffff, true)
        test_cmp(OP, 0x0000000000000001, 0x0000000080000000, true)
        test_cmp(OP, 0x0000000000000001, 0x00000000deadbeef, true)
        test_cmp(OP, 0x0000000000000001, 0x00000000ffffffff, true)
        test_cmp(OP, 0x0000000000000001, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x0000000000000001, 0x8000000000000000, false)
        test_cmp(OP, 0x0000000000000001, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x0000000000000001, 0xffffffffffffffff, false)

        test_cmp(OP, 0x000000007fffffff, 0x0000000000000000, false)
        test_cmp(OP, 0x000000007fffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x000000007fffffff, 0x000000007fffffff, false)
        test_cmp(OP, 0x000000007fffffff, 0x0000000080000000, true)
        test_cmp(OP, 0x000000007fffffff, 0x00000000deadbeef, true)
        test_cmp(OP, 0x000000007fffffff, 0x00000000ffffffff, true)
        test_cmp(OP, 0x000000007fffffff, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x000000007fffffff, 0x8000000000000000, false)
        test_cmp(OP, 0x000000007fffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x000000007fffffff, 0xffffffffffffffff, false)

        test_cmp(OP, 0x0000000080000000, 0x0000000000000000, false)
        test_cmp(OP, 0x0000000080000000, 0x0000000000000001, false)
        test_cmp(OP, 0x0000000080000000, 0x000000007fffffff, false)
        test_cmp(OP, 0x0000000080000000, 0x0000000080000000, false)
        test_cmp(OP, 0x0000000080000000, 0x00000000deadbeef, true)
        test_cmp(OP, 0x0000000080000000, 0x00000000ffffffff, true)
        test_cmp(OP, 0x0000000080000000, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x0000000080000000, 0x8000000000000000, false)
        test_cmp(OP, 0x0000000080000000, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x0000000080000000, 0xffffffffffffffff, false)

        test_cmp(OP, 0x00000000deadbeef, 0x0000000000000000, false)
        test_cmp(OP, 0x00000000deadbeef, 0x0000000000000001, false)
        test_cmp(OP, 0x00000000deadbeef, 0x000000007fffffff, false)
        test_cmp(OP, 0x00000000deadbeef, 0x0000000080000000, false)
        test_cmp(OP, 0x00000000deadbeef, 0x00000000deadbeef, false)
        test_cmp(OP, 0x00000000deadbeef, 0x00000000ffffffff, true)
        test_cmp(OP, 0x00000000deadbeef, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x00000000deadbeef, 0x8000000000000000, false)
        test_cmp(OP, 0x00000000deadbeef, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x00000000deadbeef, 0xffffffffffffffff, false)

        test_cmp(OP, 0x00000000ffffffff, 0x0000000000000000, false)
        test_cmp(OP, 0x00000000ffffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x00000000ffffffff, 0x000000007fffffff, false)
        test_cmp(OP, 0x00000000ffffffff, 0x0000000080000000, false)
        test_cmp(OP, 0x00000000ffffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0x00000000ffffffff, 0x00000000ffffffff, false)
        test_cmp(OP, 0x00000000ffffffff, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x00000000ffffffff, 0x8000000000000000, false)
        test_cmp(OP, 0x00000000ffffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x00000000ffffffff, 0xffffffffffffffff, false)

        test_cmp(OP, 0x7fffffffffffffff, 0x0000000000000000, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x000000007fffffff, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x0000000080000000, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x00000000ffffffff, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x7fffffffffffffff, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x8000000000000000, false)
        test_cmp(OP, 0x7fffffffffffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x7fffffffffffffff, 0xffffffffffffffff, false)

        test_cmp(OP, 0x8000000000000000, 0x0000000000000000, true)
        test_cmp(OP, 0x8000000000000000, 0x0000000000000001, true)
        test_cmp(OP, 0x8000000000000000, 0x000000007fffffff, true)
        test_cmp(OP, 0x8000000000000000, 0x0000000080000000, true)
        test_cmp(OP, 0x8000000000000000, 0x00000000deadbeef, true)
        test_cmp(OP, 0x8000000000000000, 0x00000000ffffffff, true)
        test_cmp(OP, 0x8000000000000000, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x8000000000000000, 0x8000000000000000, false)
        test_cmp(OP, 0x8000000000000000, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x8000000000000000, 0xffffffffffffffff, true)

        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000000000000, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000000000001, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x000000007fffffff, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000080000000, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x00000000deadbeef, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x00000000ffffffff, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x7fffffffffffffff, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x8000000000000000, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0xffffffffffffffff, true)

        test_cmp(OP, 0xffffffffffffffff, 0x0000000000000000, true)
        test_cmp(OP, 0xffffffffffffffff, 0x0000000000000001, true)
        test_cmp(OP, 0xffffffffffffffff, 0x000000007fffffff, true)
        test_cmp(OP, 0xffffffffffffffff, 0x0000000080000000, true)
        test_cmp(OP, 0xffffffffffffffff, 0x00000000deadbeef, true)
        test_cmp(OP, 0xffffffffffffffff, 0x00000000ffffffff, true)
        test_cmp(OP, 0xffffffffffffffff, 0x7fffffffffffffff, true)
        test_cmp(OP, 0xffffffffffffffff, 0x8000000000000000, false)
        test_cmp(OP, 0xffffffffffffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0xffffffffffffffff, 0xffffffffffffffff, false)

#undef OP
#define OP cmpledb
        test_cmp(OP, 0x0000000000000000, 0x0000000000000000, true)
        test_cmp(OP, 0x0000000000000000, 0x0000000000000001, true)
        test_cmp(OP, 0x0000000000000000, 0x000000007fffffff, true)
        test_cmp(OP, 0x0000000000000000, 0x0000000080000000, true)
        test_cmp(OP, 0x0000000000000000, 0x00000000deadbeef, true)
        test_cmp(OP, 0x0000000000000000, 0x00000000ffffffff, true)
        test_cmp(OP, 0x0000000000000000, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x0000000000000000, 0x8000000000000000, false)
        test_cmp(OP, 0x0000000000000000, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x0000000000000000, 0xffffffffffffffff, false)

        test_cmp(OP, 0x0000000000000001, 0x0000000000000000, false)
        test_cmp(OP, 0x0000000000000001, 0x0000000000000001, true)
        test_cmp(OP, 0x0000000000000001, 0x000000007fffffff, true)
        test_cmp(OP, 0x0000000000000001, 0x0000000080000000, true)
        test_cmp(OP, 0x0000000000000001, 0x00000000deadbeef, true)
        test_cmp(OP, 0x0000000000000001, 0x00000000ffffffff, true)
        test_cmp(OP, 0x0000000000000001, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x0000000000000001, 0x8000000000000000, false)
        test_cmp(OP, 0x0000000000000001, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x0000000000000001, 0xffffffffffffffff, false)

        test_cmp(OP, 0x000000007fffffff, 0x0000000000000000, false)
        test_cmp(OP, 0x000000007fffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x000000007fffffff, 0x000000007fffffff, true)
        test_cmp(OP, 0x000000007fffffff, 0x0000000080000000, true)
        test_cmp(OP, 0x000000007fffffff, 0x00000000deadbeef, true)
        test_cmp(OP, 0x000000007fffffff, 0x00000000ffffffff, true)
        test_cmp(OP, 0x000000007fffffff, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x000000007fffffff, 0x8000000000000000, false)
        test_cmp(OP, 0x000000007fffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x000000007fffffff, 0xffffffffffffffff, false)

        test_cmp(OP, 0x0000000080000000, 0x0000000000000000, false)
        test_cmp(OP, 0x0000000080000000, 0x0000000000000001, false)
        test_cmp(OP, 0x0000000080000000, 0x000000007fffffff, false)
        test_cmp(OP, 0x0000000080000000, 0x0000000080000000, true)
        test_cmp(OP, 0x0000000080000000, 0x00000000deadbeef, true)
        test_cmp(OP, 0x0000000080000000, 0x00000000ffffffff, true)
        test_cmp(OP, 0x0000000080000000, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x0000000080000000, 0x8000000000000000, false)
        test_cmp(OP, 0x0000000080000000, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x0000000080000000, 0xffffffffffffffff, false)

        test_cmp(OP, 0x00000000deadbeef, 0x0000000000000000, false)
        test_cmp(OP, 0x00000000deadbeef, 0x0000000000000001, false)
        test_cmp(OP, 0x00000000deadbeef, 0x000000007fffffff, false)
        test_cmp(OP, 0x00000000deadbeef, 0x0000000080000000, false)
        test_cmp(OP, 0x00000000deadbeef, 0x00000000deadbeef, true)
        test_cmp(OP, 0x00000000deadbeef, 0x00000000ffffffff, true)
        test_cmp(OP, 0x00000000deadbeef, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x00000000deadbeef, 0x8000000000000000, false)
        test_cmp(OP, 0x00000000deadbeef, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x00000000deadbeef, 0xffffffffffffffff, false)

        test_cmp(OP, 0x00000000ffffffff, 0x0000000000000000, false)
        test_cmp(OP, 0x00000000ffffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x00000000ffffffff, 0x000000007fffffff, false)
        test_cmp(OP, 0x00000000ffffffff, 0x0000000080000000, false)
        test_cmp(OP, 0x00000000ffffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0x00000000ffffffff, 0x00000000ffffffff, true)
        test_cmp(OP, 0x00000000ffffffff, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x00000000ffffffff, 0x8000000000000000, false)
        test_cmp(OP, 0x00000000ffffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x00000000ffffffff, 0xffffffffffffffff, false)

        test_cmp(OP, 0x7fffffffffffffff, 0x0000000000000000, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x0000000000000001, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x000000007fffffff, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x0000000080000000, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x00000000deadbeef, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x00000000ffffffff, false)
        test_cmp(OP, 0x7fffffffffffffff, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x7fffffffffffffff, 0x8000000000000000, false)
        test_cmp(OP, 0x7fffffffffffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0x7fffffffffffffff, 0xffffffffffffffff, false)

        test_cmp(OP, 0x8000000000000000, 0x0000000000000000, true)
        test_cmp(OP, 0x8000000000000000, 0x0000000000000001, true)
        test_cmp(OP, 0x8000000000000000, 0x000000007fffffff, true)
        test_cmp(OP, 0x8000000000000000, 0x0000000080000000, true)
        test_cmp(OP, 0x8000000000000000, 0x00000000deadbeef, true)
        test_cmp(OP, 0x8000000000000000, 0x00000000ffffffff, true)
        test_cmp(OP, 0x8000000000000000, 0x7fffffffffffffff, true)
        test_cmp(OP, 0x8000000000000000, 0x8000000000000000, true)
        test_cmp(OP, 0x8000000000000000, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0x8000000000000000, 0xffffffffffffffff, true)

        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000000000000, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000000000001, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x000000007fffffff, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x0000000080000000, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x00000000deadbeef, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x00000000ffffffff, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x7fffffffffffffff, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0x8000000000000000, false)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0xdeadbeefdeadbeef, true)
        test_cmp(OP, 0xdeadbeefdeadbeef, 0xffffffffffffffff, true)

        test_cmp(OP, 0xffffffffffffffff, 0x0000000000000000, true)
        test_cmp(OP, 0xffffffffffffffff, 0x0000000000000001, true)
        test_cmp(OP, 0xffffffffffffffff, 0x000000007fffffff, true)
        test_cmp(OP, 0xffffffffffffffff, 0x0000000080000000, true)
        test_cmp(OP, 0xffffffffffffffff, 0x00000000deadbeef, true)
        test_cmp(OP, 0xffffffffffffffff, 0x00000000ffffffff, true)
        test_cmp(OP, 0xffffffffffffffff, 0x7fffffffffffffff, true)
        test_cmp(OP, 0xffffffffffffffff, 0x8000000000000000, false)
        test_cmp(OP, 0xffffffffffffffff, 0xdeadbeefdeadbeef, false)
        test_cmp(OP, 0xffffffffffffffff, 0xffffffffffffffff, true)

#include "test_end.S"
